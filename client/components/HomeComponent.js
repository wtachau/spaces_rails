// Generated by CoffeeScript 1.9.3
var HeaderComponent, HomeComponent, MainFeedComponent, ProjectCreateComponent, React, a, div, h1, p, ref;

React = require("react");

HeaderComponent = require("./header/HeaderComponent");

MainFeedComponent = require("./feed/MainFeedComponent");

ProjectCreateComponent = require("./project/ProjectCreateComponent");

ref = React.DOM, div = ref.div, h1 = ref.h1, p = ref.p, a = ref.a;

HomeComponent = React.createClass({
  getInitialState: function() {
    return {
      user: null,
      page: 'feed',
      selectedProject: null
    };
  },
  componentWillMount: function() {},
  createClicked: function() {
    return this.setState({
      page: 'project',
      selectedProject: null
    });
  },
  homeClicked: function() {
    return this.setState({
      page: 'feed'
    });
  },
  goToProject: function(projectID) {
    return this.setState({
      page: 'project',
      selectedProject: projectID
    });
  },
  projectClicked: function(e) {
    return this.goToProject($(e.target).data('project-id'));
  },
  render: function() {
    var pageComponent;
    pageComponent = (function() {
      switch (this.state.page) {
        case 'feed':
          return React.createElement(MainFeedComponent, {
            projectClicked: this.projectClicked,
            origin: this.props.origin,
            readFromAPI: this.props.readFromAPI
          });
        case 'project':
          if (this.state.selectedProject) {
            return React.createElement(ProjectViewComponent, {
              project: this.state.selectedProject
            });
          } else {
            return React.createElement(ProjectCreateComponent, {
              onCreate: this.goToProject
            });
          }
      }
    }).call(this);
    return div({
      id: "foo",
      className: "bar"
    }, React.createElement(HeaderComponent, {
      homeClicked: this.homeClicked,
      createClicked: this.createClicked,
      user: this.state.user
    }), pageComponent);
  }
});

module.exports = HomeComponent;
