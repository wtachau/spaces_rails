// Generated by CoffeeScript 1.9.3
var ProjectViewComponent, React, Router, a, div, i, img, ref;

React = require('react');

Router = require('react-router');

ref = React.DOM, div = ref.div, img = ref.img, i = ref.i, a = ref.a;

ProjectViewComponent = React.createClass({
  mixins: [Router.State],
  getDefaultState: function() {
    return {};
  },
  componentWillMount: function() {
    return this.props.readFromAPI(this.props.origin + '/projects/' + this.getParams().id, (function(_this) {
      return function(data) {
        return _this.setState(data.project);
      };
    })(this));
  },
  render: function() {
    console.log(this);
    if (this.state) {
      return div({
        className: "body-area"
      }, div({
        className: "main-panel main-panel-project"
      }, div({
        className: "project-history col-xs-3"
      }, div({
        className: "project-snapshot"
      }, div({
        className: "snapshot-icon"
      }), this.state.name)), div({
        className: "project-panel col-xs-9"
      }, div({
        className: "profile-wrapper"
      }, div({
        className: "profile-container"
      }, div({
        className: "profile-text-wrapper"
      }, div({
        className: "username"
      }, this.state.user.first_name + " " + this.state.user.last_name), div({
        className: "timestamp"
      }, this.state.time_ago + " ago")), img({
        src: this.state.user.image
      }))), div({
        className: "project-title"
      }, this.state.name), div({
        className: "project-section-title"
      }, "Problem"), div({
        className: "project-section-text"
      }, this.state.problem), div({
        className: "project-section-title"
      }, "Solution"), div({
        className: "project-section-text"
      }, this.state.solution), div({
        className: "project-section-title"
      }, "More info"), div({
        className: "project-section-text"
      }, this.state.info))), div({
        className: "sidebar"
      }, div({
        className: "sidebar-header"
      }, "Attachments and Links"), [
        {
          "icon": "github",
          "link": this.state.github
        }, {
          "icon": "dropbox",
          "link": this.state.dropbox
        }
      ].map(function(arg) {
        var icon, link;
        icon = arg.icon, link = arg.link;
        if (link) {
          return div({
            className: "sidebar-link-wrapper"
          }, div({
            className: "icon-wrapper"
          }, i({
            className: "fa fa-" + icon
          })), a({
            href: link
          }));
        } else {
          return null;
        }
      })));
    } else {
      return div({
        className: "loading"
      }, "loading");
    }
  }
});

module.exports = ProjectViewComponent;
